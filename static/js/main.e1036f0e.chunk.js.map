{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","app/loadTodos.js","App.jsx","index.js"],"names":["TodoList","state","filterStr","select","this","props","todos","selectUser","checkHandler","className","value","placeholder","onChange","target","setState","filter","todo","completed","title","toLowerCase","includes","map","key","id","type","checked","onClick","userId","React","Component","CurrentUser","users","fetch","then","response","json","catch","user","data","usersFromServer","find","userFind","length","name","email","phone","App","selectedUserId","todoId","todosNew","todoNew","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1036f0e.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    filterStr: '',\n    select: 'all',\n  };\n\n  render() {\n    const { filterStr, select } = this.state;\n    const { todos, selectUser, checkHandler } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          className=\"TodoList__filter\"\n          value={filterStr}\n          placeholder=\"Filter todos\"\n          onChange={({ target }) => {\n            this.setState({ filterStr: target.value });\n          }}\n        />\n        <select\n          className=\"TodoList__select\"\n          onChange={({ target }) => {\n            this.setState({ select: target.value });\n          }}\n        >\n          <option value=\"all\"> all </option>\n          <option value=\"active\"> active </option>\n          <option value=\"completed\"> completed </option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos\n              .filter((todo) => {\n                switch (select) {\n                  case 'active':\n                    return !todo.completed;\n                  case 'completed':\n                    return todo.completed;\n                  default:\n                    return todo;\n                }\n              })\n              .filter(todo => todo.title\n                && todo.title.toLowerCase().includes(filterStr.toLowerCase()))\n              .map(todo => (\n                <li\n                  key={todo.id}\n                  className={`TodoList__item ${todo.completed\n                    ? 'TodoList__item--checked'\n                    : 'TodoList__item--unchecked'}`}\n                >\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={todo.completed}\n                      onChange={() => checkHandler(todo.id)}\n                    />\n                    <p>{todo.title}</p>\n                  </label>\n\n                  <button\n                    className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                    type=\"button\"\n                    onClick={() => selectUser(todo.userId)}\n                  >\n                    User&nbsp;#\n                    {todo.userId}\n                  </button>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  checkHandler: PropTypes.func.isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUsers } from '../../app/loadTodos';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    users: [],\n  };\n\n  componentDidMount() {\n    getUsers()\n      .then((usersFromServer) => {\n        this.setState({\n          users: usersFromServer,\n        });\n      });\n  }\n\n  render() {\n    const { users } = this.state;\n    const { userId } = this.props;\n    const user = users.find(userFind => userFind.id === userId);\n\n    return (\n      <>\n        {users.length > 0 ? (\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                Selected user:\n                {user.id}\n              </span>\n            </h2>\n\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n          </div>\n        ) : 'Loading...'}\n      </>\n\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n};\n","export function getTodos() {\n  return fetch('https://mate-api.herokuapp.com/todos')\n    .then(response => response.json())\n    .catch(() => [])\n    .then(todo => todo.data);\n}\n\nexport function getUsers() {\n  return fetch('https://mate-api.herokuapp.com/users')\n    .then(response => response.json())\n    .catch(() => [])\n    .then(user => user.data);\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './app/loadTodos';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todosFromServer) => {\n        this.setState({\n          todos: todosFromServer,\n        });\n      });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  };\n\n  checkHandler = (todoId) => {\n    const todosNew = [...this.state.todos];\n    const todoNew = todosNew.find(todo => todo.id === todoId);\n\n    todoNew.completed = !todoNew.completed;\n    this.setState({ todos: [...todosNew] });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            checkHandler={this.checkHandler}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"App__clear-button\"\n                  onClick={() => {\n                    this.setState({ selectedUserId: 0 });\n                  }}\n                >\n                  Clear\n                </button>\n                <CurrentUser userId={selectedUserId} />\n              </div>\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}